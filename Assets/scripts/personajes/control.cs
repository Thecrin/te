//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/scripts/personajes/control.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Control : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Control()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""control"",
    ""maps"": [
        {
            ""name"": ""control_gamepad"",
            ""id"": ""eab9d141-982c-4110-98da-fff4f73111db"",
            ""actions"": [
                {
                    ""name"": ""moverse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""13133941-334d-419a-ac50-d5399cb4b696"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camara"",
                    ""type"": ""Value"",
                    ""id"": ""8f231ae3-32c5-439a-acde-b11e6cdc9af4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""brincar"",
                    ""type"": ""Button"",
                    ""id"": ""449c03dc-b705-4cd5-b8ba-5ec1ae4ee7be"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""gravedad"",
                    ""type"": ""Button"",
                    ""id"": ""42368ce9-6a2c-411d-a97c-951b9c62b953"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9e251ee2-de48-4abe-8ac5-73213c31d44d"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4c60c65-8dc7-415f-aa9c-595c34a755fa"",
                    ""path"": ""<XInputController>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""moverse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff31f32d-5cc9-4421-b0c7-fb5a20aa5a8d"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camara"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0966eaa2-c7e9-4ad0-b5b6-c8dbd1ce1f4d"",
                    ""path"": ""<XInputController>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camara"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0628c72-e735-47a6-8141-8f9b96e78d60"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""brincar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""820ac619-b9cb-4387-9bd2-81c7d9f135cf"",
                    ""path"": ""<XInputController>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""brincar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0dcf4167-aa3a-4782-a81d-9e3f95b92db2"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""gravedad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2389918-5301-4545-b384-de3156da0921"",
                    ""path"": ""<XInputController>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""gravedad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // control_gamepad
        m_control_gamepad = asset.FindActionMap("control_gamepad", throwIfNotFound: true);
        m_control_gamepad_moverse = m_control_gamepad.FindAction("moverse", throwIfNotFound: true);
        m_control_gamepad_Camara = m_control_gamepad.FindAction("Camara", throwIfNotFound: true);
        m_control_gamepad_brincar = m_control_gamepad.FindAction("brincar", throwIfNotFound: true);
        m_control_gamepad_gravedad = m_control_gamepad.FindAction("gravedad", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // control_gamepad
    private readonly InputActionMap m_control_gamepad;
    private IControl_gamepadActions m_Control_gamepadActionsCallbackInterface;
    private readonly InputAction m_control_gamepad_moverse;
    private readonly InputAction m_control_gamepad_Camara;
    private readonly InputAction m_control_gamepad_brincar;
    private readonly InputAction m_control_gamepad_gravedad;
    public struct Control_gamepadActions
    {
        private @Control m_Wrapper;
        public Control_gamepadActions(@Control wrapper) { m_Wrapper = wrapper; }
        public InputAction @moverse => m_Wrapper.m_control_gamepad_moverse;
        public InputAction @Camara => m_Wrapper.m_control_gamepad_Camara;
        public InputAction @brincar => m_Wrapper.m_control_gamepad_brincar;
        public InputAction @gravedad => m_Wrapper.m_control_gamepad_gravedad;
        public InputActionMap Get() { return m_Wrapper.m_control_gamepad; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Control_gamepadActions set) { return set.Get(); }
        public void SetCallbacks(IControl_gamepadActions instance)
        {
            if (m_Wrapper.m_Control_gamepadActionsCallbackInterface != null)
            {
                @moverse.started -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnMoverse;
                @moverse.performed -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnMoverse;
                @moverse.canceled -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnMoverse;
                @Camara.started -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnCamara;
                @Camara.performed -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnCamara;
                @Camara.canceled -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnCamara;
                @brincar.started -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnBrincar;
                @brincar.performed -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnBrincar;
                @brincar.canceled -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnBrincar;
                @gravedad.started -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnGravedad;
                @gravedad.performed -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnGravedad;
                @gravedad.canceled -= m_Wrapper.m_Control_gamepadActionsCallbackInterface.OnGravedad;
            }
            m_Wrapper.m_Control_gamepadActionsCallbackInterface = instance;
            if (instance != null)
            {
                @moverse.started += instance.OnMoverse;
                @moverse.performed += instance.OnMoverse;
                @moverse.canceled += instance.OnMoverse;
                @Camara.started += instance.OnCamara;
                @Camara.performed += instance.OnCamara;
                @Camara.canceled += instance.OnCamara;
                @brincar.started += instance.OnBrincar;
                @brincar.performed += instance.OnBrincar;
                @brincar.canceled += instance.OnBrincar;
                @gravedad.started += instance.OnGravedad;
                @gravedad.performed += instance.OnGravedad;
                @gravedad.canceled += instance.OnGravedad;
            }
        }
    }
    public Control_gamepadActions @control_gamepad => new Control_gamepadActions(this);
    public interface IControl_gamepadActions
    {
        void OnMoverse(InputAction.CallbackContext context);
        void OnCamara(InputAction.CallbackContext context);
        void OnBrincar(InputAction.CallbackContext context);
        void OnGravedad(InputAction.CallbackContext context);
    }
}
